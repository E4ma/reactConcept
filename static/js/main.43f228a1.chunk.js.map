{"version":3,"sources":["Displayer.js","Adder.js","App.js","reportWebVitals.js","index.js"],"names":["Displayer","props","a","barney","d","headColour","Header","as","color","Adder","b","lilAdder","e","colourSet","f","lilColour","Button","onClick","curr","Checkbox","slider","toggle","App","useState","count","setCount","count2","setCount2","colour","setColour","className","currentValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAceA,EAXG,SAACC,GACf,IAAIC,EAAID,EAAME,OACVC,EAAIH,EAAMI,WAEd,OACI,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAOJ,EAAvB,SACKF,K,kBCkBEO,EAxBD,SAACR,GACX,IAAIS,EAAIT,EAAMU,SACVC,EAAIX,EAAMY,UACVC,EAAIb,EAAMc,UAUd,OACI,gCAEI,cAACC,EAAA,EAAD,CAAQR,MAAO,QAASS,QAAS,kBAAMP,GAAE,SAACQ,GAAW,OAAOA,EAAO,MAAnE,2BACA,4BAAG,cAACC,EAAA,EAAD,CAAUC,QAAQ,EAAMC,QAAQ,EAAOJ,QAAS,WAX7C,QAANH,EACAF,EAAE,SACW,UAANE,GACPF,EAAE,gBCcCU,MApBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,QAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGaJ,mBAAS,OAHtB,mBAGRK,EAHQ,KAGAC,EAHA,KAMb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACGN,EACD,wBAAQP,QAAS,kBAAMQ,GAAS,SAACM,GAAmB,OAAOA,EAAe,MAA1E,sBAEA,cAAC,EAAD,CAAW5B,OAAQuB,EAAQrB,WAAYuB,IACvC,cAAC,EAAD,CAAOjB,SAAUgB,EAAWd,UAAWgB,EAAWd,UAAWa,UCPtDI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.43f228a1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Header } from 'semantic-ui-react'\r\n\r\nconst Displayer = (props) => {\r\n    let a = props.barney;\r\n    let d = props.headColour;\r\n    // console.log(`d is: ${d}`);\r\n    return (\r\n        <Header as='h3' color={d}>\r\n            {a}\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Displayer\r\n","import React from 'react'\r\nimport { Checkbox, Button } from 'semantic-ui-react'\r\n\r\nconst Adder = (props) => {\r\n    let b = props.lilAdder;\r\n    let e = props.colourSet;\r\n    let f = props.lilColour\r\n\r\n    const swapColours = () => {\r\n        if (f === 'red') {\r\n            e('green');\r\n        } else if (f === 'green') {\r\n            e('red');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Button color={'olive'} onClick={() => b((curr) => { return curr + 1 })} >click me too!</Button>\r\n            <p><Checkbox slider={true} toggle={false} onClick={() => swapColours()} /></p>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Adder\r\n","\nimport './App.css';\nimport { useState } from 'react';\nimport Displayer from './Displayer';\nimport Adder from './Adder';\n\nfunction App() {\n  const [count, setCount] = useState(42);\n  const [count2, setCount2] = useState(100001);\n  let [colour, setColour] = useState('red');\n  // shift alt and down repeats the line your cursor is on\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {count}\n        <button onClick={() => setCount((currentValue) => { return currentValue + 1 })}>click me</button>\n        {/* instead of 'count + 1' using callback(a function) in setCount to avoid time lag */}\n        <Displayer barney={count2} headColour={colour} />\n        <Adder lilAdder={setCount2} colourSet={setColour} lilColour={colour} />\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}